var documenterSearchIndex = {"docs":
[{"location":"api/#Gomen-API-1","page":"API Reference","title":"Gomen API","text":"","category":"section"},{"location":"api/#","page":"API Reference","title":"API Reference","text":"CurrentModule = Gomen","category":"page"},{"location":"api/#Games-1","page":"API Reference","title":"Games","text":"","category":"section"},{"location":"api/#","page":"API Reference","title":"API Reference","text":"Game\nplay\nGames","category":"page"},{"location":"api/#Gomen.Game","page":"API Reference","title":"Gomen.Game","text":"Game(s, t)\n\nA two-player, two-strategy, symmetric game. The games are characterized by the diagonal elements of a payoff matrix\n\nbeginbmatrix\n    1  S \n    T  0\nendbmatrix\n\nwith -05 leq S leq 05 and 05 leq T leq 15,\n\n\n\n\n\n","category":"type"},{"location":"api/#Gomen.play","page":"API Reference","title":"Gomen.play","text":"play(g::Game, a, b)\n\nPlay the game with the strategies a and b, returning the payoff recieved by agent playing a.\n\n\n\n\n\nplay(arena, strategies)\n\nPlay one round of the game in the arena, returning the agents' next strategies.\n\n\n\n\n\nplay(arena, rounds)\n\nPlay the game in the arena repeatedly with the agents starting out with a random initial strategy. The result is a matrix of the agents strategies with rounds many rows, one for each round played.\n\n\n\n\n\nplay(arena, rounds, replicates)\n\nStarting from replicates many random initial strategies, play the game in the arena rounds many times. The result is a 3-D array of the agents strategies with the first two dimensions of size replicates and rounds, respectively.\n\n\n\n\n\n","category":"function"},{"location":"api/#Gomen.Games","page":"API Reference","title":"Gomen.Games","text":"Games(sstep, tstep)\n\nAn iterator over the games with S and T parameters varied over their ranges with the provided step sizes.\n\n\n\n\n\n","category":"type"},{"location":"api/#Rules-1","page":"API Reference","title":"Rules","text":"","category":"section"},{"location":"api/#","page":"API Reference","title":"API Reference","text":"AbstractRule\napply\nSigmoid\nHeaviside","category":"page"},{"location":"api/#Gomen.AbstractRule","page":"API Reference","title":"Gomen.AbstractRule","text":"AbstractRule\n\nA supertype for all decision rules.\n\n\n\n\n\n","category":"type"},{"location":"api/#Gomen.apply","page":"API Reference","title":"Gomen.apply","text":"apply(r::AbstractRule, dp)\n\nDetermine the probability an agent will switch its strategy based on the rule and the difference in payoffs of the two strategies.\n\n\n\n\n\n","category":"function"},{"location":"api/#Gomen.Sigmoid","page":"API Reference","title":"Gomen.Sigmoid","text":"Sigmoid(β)\n\nA rule specifying that the agent will switch its strategy with probability\n\nP(dp) = frac11 + e^-beta dp\n\nwhere dp is the difference in the two payoffs.\n\n\n\n\n\n","category":"type"},{"location":"api/#Gomen.Heaviside","page":"API Reference","title":"Gomen.Heaviside","text":"Heaviside(ϵ)\n\nA rule specifying that the agent will switch its strategy with probability\n\nP(dp) = begincases\n    00  dp leq -epsilon \n    05  -epsilon  dp  epsilon \n    10  epsilon  dp\nendcases\n\nwhere dp is the difference in the two payoffs.\n\n\n\n\n\n","category":"type"},{"location":"api/#Schemes-1","page":"API Reference","title":"Schemes","text":"","category":"section"},{"location":"api/#","page":"API Reference","title":"API Reference","text":"AbstractScheme\ndecide\nCounterFactual","category":"page"},{"location":"api/#Gomen.AbstractScheme","page":"API Reference","title":"Gomen.AbstractScheme","text":"AbstractScheme\n\nA supertype for all schemes, mechanisms for agents to choose their next strategy.\n\n\n\n\n\n","category":"type"},{"location":"api/#Gomen.decide","page":"API Reference","title":"Gomen.decide","text":"decide(scheme, ss::AbstractVector{Int}, ps::AbstractArray{Float64,2})\n\nUse the scheme to decide what each agent's strategy will be in the next timestep. Here ss is a vector of the agents' current strategies (one for each agent) and ps is a matrix of payoffs. Each column of ps should correspond to an agent, and each row is a corresponding strategy.\n\n\n\n\n\ndecide(scheme, ss::AbstractVector{Int}, dps::AbstractVector{Float64})\n\nUse the scheme to decide what each agent's strategy will be in the next time step. Here ss is a vector of the agents' current strategies (one for each agent) and dps is a vector of the difference between the payoff for the strategy the agent didn't play and the payoff they actually received.\n\ndecide(scheme, s::Int, dp::Float64)\n\nUse the scheme to decide what an agent's strategy will be in the next time step. Here s is the agent's current strategy and dp is the difference between the payoff for the alternative strategy and the actual payoff they received.\n\n\n\n\n\n","category":"function"},{"location":"api/#Gomen.CounterFactual","page":"API Reference","title":"Gomen.CounterFactual","text":"CounterFactural([rule = Sigmoid()])\n\nThe \"counter-factual\" update scheme. Under this scheme, the agent will switch their strategy according to some probability. The probability the agent will switch is determined by applying the scheme's rule to the payoff difference.\n\n\n\n\n\n","category":"type"},{"location":"api/#Arena-1","page":"API Reference","title":"Arena","text":"","category":"section"},{"location":"api/#","page":"API Reference","title":"API Reference","text":"AbstractArena\ngame\ngraph\nscheme\nBase.length\nLightGraphs.edges\nLightGraphs.neighbors\nArena\npayoffs","category":"page"},{"location":"api/#Gomen.AbstractArena","page":"API Reference","title":"Gomen.AbstractArena","text":"AbstractArena{Graph, Scheme}\n\nA supertype for all game-playing arenas.\n\n\n\n\n\n","category":"type"},{"location":"api/#Gomen.game","page":"API Reference","title":"Gomen.game","text":"game(arena)\n\nThe game the agents in the arena play\n\n\n\n\n\n","category":"function"},{"location":"api/#Gomen.graph","page":"API Reference","title":"Gomen.graph","text":"graph(arena)\n\nThe graph on which the agents play their games\n\n\n\n\n\n","category":"function"},{"location":"api/#Gomen.scheme","page":"API Reference","title":"Gomen.scheme","text":"scheme(arena)\n\nThe scheme the agents use to determine their next strategy\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.length","page":"API Reference","title":"Base.length","text":"length(arena)\n\nThe number of agents in the arena\n\n\n\n\n\n","category":"function"},{"location":"api/#LightGraphs.edges","page":"API Reference","title":"LightGraphs.edges","text":"edges(arena)\n\nThe edges connecting agents in the arena\n\n\n\n\n\n","category":"function"},{"location":"api/#LightGraphs.neighbors","page":"API Reference","title":"LightGraphs.neighbors","text":"neighbors(arena, agent)\n\nA vector of the agent's neighbors\n\n\n\n\n\n","category":"function"},{"location":"api/#Gomen.Arena","page":"API Reference","title":"Gomen.Arena","text":"Arena(game, graph, scheme) <: AbstractArena\n\nAn arena in which the agents, situated on the vertices of a graph, play a game with their neighbors. Every pair of agents plays the same game. With each round of play, the agents use the scheme to decide what their next strategy will be.\n\nIn this arena, the agents accumulate payoff by playing with every neighbor. The decision of what strategy to use in the next time step is based on the difference between the total payoffs for each of the agents' strategies.\n\n\n\n\n\n","category":"type"},{"location":"api/#Gomen.payoffs","page":"API Reference","title":"Gomen.payoffs","text":"payoffs(arena, strategies)\n\nDetermine the payoff of each agents' possible strategies given the strategies of all of the other agents.\n\n\n\n\n\n","category":"function"},{"location":"#Gomen.jl-1","page":"Home","title":"Gomen.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Documentation for Gomen.jl","category":"page"}]
}
