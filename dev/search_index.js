var documenterSearchIndex = {"docs":
[{"location":"api/#Gomen-API-1","page":"API Reference","title":"Gomen API","text":"","category":"section"},{"location":"api/#","page":"API Reference","title":"API Reference","text":"CurrentModule = Gomen","category":"page"},{"location":"api/#Games-1","page":"API Reference","title":"Games","text":"","category":"section"},{"location":"api/#","page":"API Reference","title":"API Reference","text":"Game\nplay","category":"page"},{"location":"api/#Gomen.Game","page":"API Reference","title":"Gomen.Game","text":"Game(s, t)\n\nA two-player, two-strategy, symmetric game. The games are characterized by the diagonal elements of a payoff matrix\n\nbeginbmatrix\n    1  S \n    T  0\nendbmatrix\n\nwith -05 leq S leq 05 and 05 leq T leq 15,\n\n\n\n\n\n","category":"type"},{"location":"api/#Gomen.play","page":"API Reference","title":"Gomen.play","text":"play(g::Game, a, b)\n\nPlay the game with the strategies a and b, returning the payoff recieved by agent playing a.\n\n\n\n\n\n","category":"function"},{"location":"api/#Rules-1","page":"API Reference","title":"Rules","text":"","category":"section"},{"location":"api/#","page":"API Reference","title":"API Reference","text":"AbstractRule\napply\nSigmoid\nHeaviside","category":"page"},{"location":"api/#Gomen.AbstractRule","page":"API Reference","title":"Gomen.AbstractRule","text":"AbstractRule\n\nA supertype for all decision rules.\n\n\n\n\n\n","category":"type"},{"location":"api/#Gomen.apply","page":"API Reference","title":"Gomen.apply","text":"apply(r::AbstractRule, dp)\n\nDetermine the probability an agent will switch its strategy based on the rule and the difference in payoffs of the two strategies.\n\n\n\n\n\n","category":"function"},{"location":"api/#Gomen.Sigmoid","page":"API Reference","title":"Gomen.Sigmoid","text":"Sigmoid(β)\n\nA rule specifying that the agent will switch its strategy with probability\n\nP(dp) = frac11 + e^-beta dp\n\nwhere dp is the difference in the two payoffs.\n\n\n\n\n\n","category":"type"},{"location":"api/#Gomen.Heaviside","page":"API Reference","title":"Gomen.Heaviside","text":"Heaviside(ϵ)\n\nA rule specifying that the agent will switch its strategy with probability\n\nP(dp) = begincases\n    00  dp leq -epsilon \n    05  -epsilon  dp  epsilon \n    10  epsilon  dp\nendcases\n\nwhere dp is the difference in the two payoffs.\n\n\n\n\n\n","category":"type"},{"location":"api/#Schemes-1","page":"API Reference","title":"Schemes","text":"","category":"section"},{"location":"api/#","page":"API Reference","title":"API Reference","text":"AbstractScheme\ndecide\nCounterFactual","category":"page"},{"location":"api/#Gomen.AbstractScheme","page":"API Reference","title":"Gomen.AbstractScheme","text":"AbstractScheme\n\nA supertype for all schemes, mechanisms for agents to choose their next strategy.\n\n\n\n\n\n","category":"type"},{"location":"api/#Gomen.decide","page":"API Reference","title":"Gomen.decide","text":"decide(scheme, ss::AbstractVector{Int}, ps::AbstractArray{Float64,2})\n\nUse the scheme to decide what each agent's strategy will be in the next timestep. Here ss is a vector of the agents' current strategies (one for each agent) and ps is a matrix of payoffs. Each column of ps should correspond to an agent, and each row is a corresponding strategy.\n\n\n\n\n\ndecide(scheme, ss::AbstractVector{Int}, dps::AbstractVector{Float64})\n\nUse the scheme to decide what each agent's strategy will be in the next time step. Here ss is a vector of the agents' current strategies (one for each agent) and dps is a vector of the difference between the payoff for the strategy the agent didn't play and the payoff they actually received.\n\ndecide(scheme, s::Int, dp::Float64)\n\nUse the scheme to decide what an agent's strategy will be in the next time step. Here s is the agent's current strategy and dp is the difference between the payoff for the alternative strategy and the actual payoff they received. \n\n\n\n\n\n","category":"function"},{"location":"api/#Gomen.CounterFactual","page":"API Reference","title":"Gomen.CounterFactual","text":"CounterFactural([rule = Sigmoid()])\n\nThe \"counter-factual\" update scheme. Under this scheme, the agent will switch their strategy according to some probability. The probability the agent will switch is determined by applying the scheme's rule to the payoff difference.\n\n\n\n\n\n","category":"type"},{"location":"#Gomen.jl-1","page":"Home","title":"Gomen.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Documentation for Gomen.jl","category":"page"}]
}
